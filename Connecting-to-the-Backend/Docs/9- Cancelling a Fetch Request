import axios, { CanceledError } from "axios";
import { useEffect, useState } from "react";

interface User {
	id: number;
	name: string;
}
function App() {
	const [users, setUsers] = useState<User[]>([]);
	const [err, setErr] = useState("");

	useEffect(() => {
		const controller = new AbortController();
		axios
			.get<User[]>("https://jsonplaceholder.typicode.com/users", {
				signal: controller.signal,
			})
			.then((res) => setUsers(res.data))
			.catch((err) => {
				if (err instanceof CanceledError) return; // need to import
				setErr(err.message);
			});

		return () => controller.abort();
	}, []);

	return (
		<div className="container">
			{err && <p className="text-danger">{err}</p>}
			<ul>
				{users.map((user) => (
					<li key={user.id}>{user.name}</li>
				))}
			</ul>
		</div>
	);
}

export default App;
